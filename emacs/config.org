Super duper config

* Bacics
#+begin_src emacs-lisp :tangle yes
  (defun sort-words (reverse beg end)
    "Sort words in region alphabetically, in REVERSE if negative.
      Prefixed with negative \\[universal-argument], sorts in reverse.

      The variable `sort-fold-case' determines whether alphabetic case
      affects the sort order.

      See `sort-regexp-fields'."
    (interactive "*P\nr")
    (sort-regexp-fields reverse "\\w+" "\\&" beg end))

  (add-hook 'shell-mode-hook 'compilation-shell-minor-mode)

  (setq inhibit-startup-message t)

  (toggle-scroll-bar -1)

  (scroll-bar-mode -1)

  (tool-bar-mode -1)

  (menu-bar-mode -1)

  (show-paren-mode 1)

  (delete-selection-mode 1)

  (global-hl-line-mode +1)

  (global-display-line-numbers-mode t)
  (defun my-relative-line-numbers-hook ()
    (setq display-line-numbers 'relative))

  (add-hook 'display-line-numbers-mode-hook 'my-relative-line-numbers-hook)

  (setq backup-directory-alist '(("." . "~/.emacs_saves")))
  (setq vc-make-backup-files t)


  (global-visual-line-mode 1)

  (setq ido-enable-flex-matching t)
  (setq ido-everywhere t)
  (ido-mode 1)
#+end_src

* Tex

#+begin_src emacs-lisp :tangle yes
  (setq TeX-auto-save t)
  (setq TeX-parse-self t)
  (setq-default TeX-engine 'xetex)
  (setq-default TeX-master nil) ; Query for master file.
  (add-hook 'LaTeX-mode-hook 'visual-line-mode)
  (add-hook 'LaTeX-mode-hook 'flyspell-mode)
  (add-hook 'LaTeX-mode-hook 'LaTeX-math-mode)
  (add-hook 'LaTeX-mode-hook 'turn-on-reftex)
  (setq reftex-plug-into-AUCTeX t)
#+end_src

* Dotnet

#+begin_src emacs-lisp :tangle yes
  (setq gud-netcoredbg-command-name "netcoredbg --interpreter=vscode")
#+end_src

* Orgmode

#+begin_src emacs-lisp :tangle yes
  (setq org-hide-emphasis-markers t)
  ;; (advice-remove 'org-babel-do-load-languages #'ignore)
  ;;  (add-to-list 'org-src-lang-modes '("jupyter" . python))

  ;; (org-babel-do-load-languages
  ;;  'org-babel-load-languages
  ;;  '((haskell . t)
  ;;    (sql . t)
  ;;    (shell . t)
  ;;    (python . t)
  ;;    (jupyter . t)

  ;;   ;; ... other languages you might have
  ;;    ))
  ;;    (add-hook 'org-babel-after-execute-hook 'org-display-inline-images 'append)

  ;; (defun org-babel-execute:fsharp (body params)
  ;; (let* ((command (concat "echo '" body "' | dotnet fsi --nologo | grep 'val it:.* =' | sed 's/^.*= //'"))
  ;;        (result (string-trim (shell-command-to-string command))))
  ;;   result))

  ;; (defun org-babel-execute:fsharp (body params)
  ;;   (let* ((command (concat "echo '" body "' | dotnet fsi"))
  ;;          (result (string-trim (shell-command-to-string command))))
  ;;     result))

  ;; (use-package ob-fsharp
  ;;   :straight t
  ;;   :config
  ;;   (add-to-list 'org-babel-load-languages '(fsharp . t)))

  (setq doc-view-resolution 400)
  (put 'dired-find-alternate-file 'disabled nil)
  (require 'org-tempo)

  (setq org-directory "~/sync/orgmode/gtd")
  (setq org-agenda-files (directory-files org-directory t "\\.org$"))
  (setq org-agenda-skip-unavailable-files t)
  (setq org-refile-targets
        '((nil :maxlevel . 3)
      (org-agenda-files :maxlevel . 3)))

;;  (setq org-refile-targets '((nil :maxlevel . 2)))

  (setq org-capture-templates '(
    ("t" "Todo [inbox]" entry (file+headline "~/sync/orgmode/gtd/inbox.org" "Inbox") "\n* TODO %i%?\n")
    ("c" "Todo [main]" entry (file+headline "~/sync/orgmode/gtd/main.org" "Inbox") "\n* TODO %i%?\n")
   ))

  (global-set-key (kbd "C-c a") #'org-agenda)
  (global-set-key (kbd "C-c c") #'org-capture)
  (setq org-todo-keywords
        '((sequence "TODO(t)" "IN-PROGRESS(i)" "SUSPENDED(s)" "IN-REVIEW(r)" "|" "WAITING(w)" "DONE(d)" "CANCELED(c)")))
  (setq org-enforce-todo-dependencies t)

  (setq org-agenda-prefix-format '((agenda . " %i %-12:c%?-12t%-6e% s")
                                   (todo . " %i %-12:c %-6e")
                                   (tags . " %i %-12:c")
                                   (search . " %i %-12:c")))
  (setq org-agenda-skip-scheduled-if-deadline-is-shown t)

  (setq org-clock-persist 'history)
  (org-clock-persistence-insinuate)

  (setq org-timer-default-timer 25)

  (defun my-org-mode-hook ()
    (org-indent-mode t))
  (add-hook 'org-mode-hook 'my-org-mode-hook)

  (setq org-format-latex-options (plist-put org-format-latex-options :scale 4))

  (setq org-confirm-babel-evaluate nil)
#+end_src

* Themes

#+begin_src emacs-lisp :tangle yes
  (load-theme 'doom-gruvbox t)
  (doom-themes-visual-bell-config))
  (set-face-attribute 'default nil
    :family "Iosevka Nerd Font"
    :width 'normal
    :weight 'normal)
#+end_src

